// cland.c
//
//      我的建议是用 save() & restore() 的方法, 将所有帮派的资料
//      存在 query_save_file() 那
//
//                                                      Created by Arthur
//
//      如要防止巫师窜改资料, 可以在要防止的地方加上, 若限定只有 ROOT_UID 可以改
//      if( previous_object() && geteuid(previous_object()) != ROOT_UID )
//              return;
// 1999 05/09 为了新的系统重新改写                      By  Chan

#include <clan.h>

inherit F_SAVE;

mapping clans;
                        // 目前是暂定这些东西, 可以自行对照, 如有加新的, 
                        // 也请加在下面, 这样比较好理解
                        // clans["帮派的 id"] = ([
                        //      "gold"          : 钱,
                        //      "members"       : ({ 帮众 id 的 array }),
                        //      "master"        : 帮主的 id,
                        //      "name"          : 帮派名称,
                        //      "level2"        : ({ array }),
                        //      "level3"        : ({ array }),
                        //      "level4"        : ({ array }),
                        //      "home"          : 帮派的家,
                        //      "bank"          : 帮派银行,只能设一间
                        //      "barrack"       : 帮派军营,只能设一间
                        //      "develop"       : 帮派人材发展状况,
                        //      "weapon"        : 帮派武器发展状况,
                        //      "war"           : 帮派战争状态,
                        //      "war_kill"      : 帮派在战争时杀的敌人,
                        //      "clan_war"      : 对战的帮派
                        //      "npc_money"     : 投资在人材寻找的金额
                        //      "weapon_money"  : 投资在武器发展的金额
                        //      "tax"           : 税率
                        //      "limit"         : 警戒、备战状态
                        //      "clan_war_end_time" : 战争结束时间
                        //      "board"         : 布告栏的数量.....
                        //      ]);

string *LEVEL   = ({ "level2", "level3", "level4" });

mapping query_clans()   { return clans; }
string query_save_file() { return DATA_DIR + "clan"; }

// 用来加减 clan 的钱
int add_money(string clan_id, int num)
{
        if( !mapp(clans[clan_id]) )
                return notify_fail("没有这个帮派。\n");
        clans[clan_id]["gold"] += num;
        return num;
}

// 用来加减某值 by Chan
int add_clanset(string clan_id,string what,int num)
{
        if( !mapp(clans[clan_id]) )
                return notify_fail("没有这个帮派。\n");
        clans[clan_id][what] += num;
        return num;
}
        
// 创新的 clan, master 是帮主 id, 
int create_clan(string master, string clan_id, string clanname)
{

        int i;
        string npc_path,clannumber,clanename;
        if( mapp(clans) && mapp(clans[clan_id]))
                return 0;
        clans[clan_id] = ([
                "master"        : master,
                "name"          : clanname,
                "level2"        : ({}),
                "level3"        : ({}),
                "level4"        : ({}),
                "home"          : CLAN_HOME+clan_id+"/room/hall.c",
                "gold"          : 500000,
                "members"       : ({ master }),
                "develop"       : 0,
                "weapon"        : 0,
                "armor_tech" : 0,
                "board"         : 1,
				"summon" : CLAN_HOME+clan_id+"/room/hall.c",
				"scour_talent" : CLAN_HOME+clan_id+"/room/hall.c",
                "home"          : CLAN_HOME+clan_id+"/room/hall.c",
                "weapon_foundry": CLAN_HOME+clan_id+"/room/hall.c",
                "armor_foundry": CLAN_HOME+clan_id+"/room/hall.c",
                "prestige"     : 10000,
                "weapon_fund"  : 10000,
				"armor_fund"  : 10000,
                "war"           : 0,
                "war_kill"      : 0,
                "clan_war"      : "无",
                "clan_war_end_time" : 0,
                "tax"           : 5,
                "limit"         : 0,

        ]);
        // 送他一间房间当开帮纪念
        assure_file( clans[clan_id]["home"] );
        CLAN_CMDS("cmkroom")->create_room(clans[clan_id]["home"]);
//建立npc的目录
        save();
        npc_path=CLAN_HOME+clan_id+"/npc";
        mkdir(npc_path);
        npc_path=CLAN_HOME+clan_id+"/weapon";
        mkdir(npc_path);
        npc_path=CLAN_HOME+clan_id+"/armor";
        mkdir(npc_path);
        return 1;
}

void create()
{
        seteuid(getuid());
        restore();
        // 设定每个 level 的人数上限, 在这边设定才可以更改
        if( !mapp(clans) )
                clans = ([]);
        clans["limit"] = ([
                "level2" : LEVEL2_NUM,
                "level3" : LEVEL3_NUM,
                "level4" : LEVEL4_NUM,
        ]);
}

// 帮派升降, return 0 表示额满或没该等级
// 若 level 为 kick 就是将 id 踢出帮派 
int clan_promote(string clan, string id, string level)
{
        int i;

        // 先确定人数
        if( !undefinedp(clans["limit"][level]) && sizeof(clans[clan][level]) > clans["limit"][level] -1 )
                return 0;

        // 将旧的位置去掉
        i = sizeof(LEVEL);
        while(i--) {
                if( member_array( id, clans[clan][LEVEL[i]]) == -1 )
                        continue;
                clans[clan][LEVEL[i]] -= ({ id });
                break;
        }

        if( level == "kick" )
                clans[clan]["members"] -= ({ id });

        // 如果 level 不在 LEVEL 里, 表示把 id 的 level 惕除
        if( member_array( level, LEVEL ) == -1 )
                return 1;

        // 加入该 level
        if( undefinedp(clans[clan][level]) )
                clans[clan][level] = ({ id });
        else
                clans[clan][level] += ({ id });
        return 1;
}

int change_clan_master(string clan, string new_master)
{
        // 先将新帮主的旧位址去掉
        clan_promote(clan, new_master, "");
        // 设定新帮主
        clans[clan]["master"] = new_master;
        return 1;
}

// 将 clan 帮派的 what 设定成 value, 这个可能对 array 不太好处理
mixed clan_set(string clan, string what, mixed value)
{
        if( undefinedp(clans[clan]) )
                return notify_fail("没有这个帮派。\n");
        clans[clan][what] = value;
        return value;
}

// 传回 clan 帮派的 what 值
// 增加可以传回阶级人数 by chan
mixed clan_query(string clan, string what,string man)
{
        return clans[clan][what];
}

// 清除一个帮派的资料
int destory_clan(string clan)
{
        string  *members,clannumbero,clannumbern;
        int     i,k,j,f;
        object  body;

        if( undefinedp(clans[clan]) )
                return 0;

        members = clans[clan]["members"];
        i       = sizeof(members);

        // 清除所有帮众的 clan data
        while(i--) {
                // 先清除线上的玩家
                if( body = find_player(members[i]) ) {
                        body->delete("clan");
                        // 在线上的玩家只要 save 就好了
                        body->save();
                        continue;
                }
                // 再清除未上线的玩家
                if( !body = FINGER_D->acquire_login_ob(members[i]) )
                        continue;
                body->delete("clan");
                // 先载入 autoload, 再 save, 不然忘了载入就 save
                // 那身上没有东西, 当然所有 autoload 的东西就会不见了
/*根据bss的程式以下那一行没没有用...by chan
                body->restore_autoload();
*/
                body->save();
                destruct(body);
        }
        // 删掉该帮派的目录
        "/adm/daemons/arthurd"->remove_all_dir( CLAN_HOME + clan);
        // 将 clan 从 clans 剔除
        map_delete(clans, clan);
        save();
        return 1;
}

// 传回该玩家帮派的目录所在
string get_clan_dir(object me)
{
        if( me->query("clan/id") )
                return CLAN_HOME + me->query("clan/id") + "/";
        return "";
}        

// 确定该玩家所在的房间是他帮派所属的, return 1 是该玩家的帮派房间
int is_clan_room(object me)
{
        int i;
        string file,roomdir;
        roomdir=get_clan_dir(me)+"room/";

        file    = file_name(environment(me));
        i       = strlen(file);

        while(i--)
                if( file[i] == '/' )
                        break;

        if( file[0..i] == roomdir)
                return 1;
        return 0;
}

// 将该玩家帮派目录下的 type 子目录中, 所有可以载入的物件的档名传回
// 以下是room的部份
// 改成使用每五十间的方式显示一次。
// 因为message的会不够长  by chan
string *show_list(object me, string type)
{
        string  *files, *list, temp, dir;
        int     i, num,show_number=0,temp_number;
               
        dir     = get_clan_dir(me);

        if( type )
                dir += type + "/";

        files   = get_dir(dir);
        i       = sizeof(files);

        while(i--)
                if( file_size(dir+files[i]) > 0 )
                {
                        if( sscanf(files[i], "%s.c", temp) == 1)
                        {
                                if( !arrayp(list) )
                                        list = ({ (dir + temp) });
                                else
                                        list += ({ (dir + temp) });
                        }
                }

        list -= ({ file_name(environment(me)) });
        dir = "\n有以下的东西可供选择：\n";
        num = sizeof(list)+1;

        if( num == 1 )
        {
                write("该目录没有档案。\n");
                return ({});
        } //每五十轮show一次...
        for(i=1; i<num; i++) {
         dir = sprintf("%s\t[%2d] %-20s%s", dir, i, list[i-1]->query("short"), (i%2 ? "" : "\n") );
         temp_number=i;
         i=i/50;
         if(i>show_number)
          {
            write( dir + "\n");
            show_number++;
            dir = "有以下的东西可供选择: \n";
          }
         i=temp_number;
        }
        write( dir + "\n");
        return list;
}

// 针对武器的部份重新来写 type是指武器种类      by chan
int show_list_weapon(object me, string type)
{
        string  *files, *list, temp, dir,str,str2,number,temp_name;
        int     i,k;
        switch (type) {
        case "blade" :
                       str="刀";
                       str2="blade";
                       break;
        case "whip"  :
                       str="鞭";
                       str2="whip";
                       break;
        case "sword" :
                       str="剑";
                       str2="sword";
                       break;
        case "dagger":
                       str="匕";
                       str2="dagger";
                       break;
        case "stabber" :
                       str="扇";
                       str2="stabber";
                       break;
        default :
                       str="空手";
                       str2="unarmed";
                       break;
        }
        temp    = get_clan_dir(me);
        dir     = get_clan_dir(me);
        dir     += "weapon/"+str2+"*.c";
        temp    += "weapon/"+str2;
        files   = get_dir(dir);
        i       = sizeof(files);
        dir = "------贵帮所设计的"+str+"类武器如下：------\n";
        write(dir);
        if(i==0)
        {
                dir = "贵帮没有设计"+str+"类的武器!!!!\n";
                write(dir);
                return 0;
        }
        for(k=1; k<i+1; k++)
         {
          number=sprintf("%d",k);
          temp +=number+".c";
          if (file_size(temp) == -1)
            temp_name="被删除之武器";
          else
              {
          temp_name=temp->query("name");
               }
          printf("[%2d]%-20s%s", k, temp_name, (k%2 ? "" : "\n") );
          temp ="";
          temp = get_clan_dir(me)+"weapon/"+str2;
         }
        write("\n");
        return 1;
}

//武器列表 by ACKY
int list_weapon(object me, int level, string type )
{
	string *files,list,temp,dir,str,number;
	int i,k;
	switch (type) {
	case "sword" :
		str="剑类";
		break;
	case "blade"  :
		str="刀类";
		break;
	case "stabber" :
		str="刺类";
		break;
	case "whip":
		str="鞭类";
		break;
	case "dagger" :
		str="匕类";
		break;
	case "bow" :
		str="弓类";
		break;
	case "arrow" :
		str="箭类";
		break;
	default :
		str="空手";
		break;
	}
	files = get_dir(get_clan_dir(me) + "weapon/"+type+level+"-" + "*.c");
	i = sizeof(files);
	if(i==0) {
		list = sprintf("帮内目前没有%s级之%s武器。\n",CHINESE_D->chinese_number(level),str);
		write(list);
		return 0;
	}
	list = sprintf("帮内目前拥有%s件%s级之%s武器：\n",CHINESE_D->chinese_number(i),CHINESE_D->chinese_number(level),str);
	write(list);
	for(k=1; k<i+1; k++) {
		number=sprintf("%d",k);
		temp = get_clan_dir(me)+"weapon/"+type+level+"-"+number+".c";
		if (file_size(temp) == -1)
			str="已销毁之武器";
		else {
			str=temp->query("name");
		}
		printf("[%2d]%-20s%s", k, str, (k%2 ? "" : "\n") );
	}
    write("\n");
    return 1;
}

//防具列表 by ACKY
int list_armor(object me, int level, string type )
{
	string *files,list,temp,dir,str,number;
	int i,k;
	switch (type) {
	case "head" :
		str="头部";
		break;
	case "neck"  :
		str="颈部";
		break;
	case "cape" :
		str="肩膀";
		break;
	case "cloth":
		str="上半身";
		break;
	case "armbands" :
		str="手臂";
		break;
	case "wrists" :
		str="手腕";
		break;
	case "hands" :
		str="手部";
		break;
	case "finger" :
		str="手指";
		break;
	case "shield" :
		str="盾类";
		break;
	case "waist" :
		str="腰部";
		break;
	case "pants" :
		str="下半身";
		break;
	case "leggings" :
		str="腿部";
		break;
	case "boots" :
		str="足部";
		break;
	}
	files = get_dir(get_clan_dir(me) + "armor/"+type+level+"-" + "*.c");
	i = sizeof(files);
	if(i==0) {
		list = sprintf("帮内目前没有%s级之%s防具。\n",CHINESE_D->chinese_number(level),str);
		write(list);
		return 1;
	}
	list = sprintf("帮内目前拥有%s件%s级之%s防具：\n",CHINESE_D->chinese_number(i),CHINESE_D->chinese_number(level),str);
	write(list);
	for(k=1; k<i+1; k++) {
		number=sprintf("%d",k);
		temp = get_clan_dir(me)+"armor/"+type+level+"-"+number+".c";
		if (file_size(temp) == -1)
			str="已销毁之防具";
		else {
			str=temp->query("name");
		}
		printf("[%2d]%-20s%s", k, str, (k%2 ? "" : "\n") );
	}
    write("\n");
    return 1;
}

//人物列表 by ACKY
int list_npc(object me, int level, string type )
{
	string *files,list,temp,dir,str,number;
	int i,k;
	switch (type) {
	case "doctor" :
		str="银针门";
		break;
	case "ponisor"  :
		str="魔教";
		break;
	case "mblade" :
		str="魔刀门";
		break;
	case "gblade" :
		str="金刀门";
		break;
	case "plan" :
		str="儒门";
		break;
	case "duan" :
		str="段家";
		break;
	case "prayer" :
		str="圣火教";
		break;
	case "killer" :
		str="杀手";
		break;
	case "bandit" :
		str="恶人谷";
		break;
	case "marksman" :
		str="射手派";
		break;
	case "dancer" :
		str="夜梦小筑";
		break;
	case "fire" :
		str="泷山派";
		break;
	case "snow" :
		str="雪苍派";
		break;
	case "taoist" :
		str="天道";
		break;
	case "bonze" :
		str="少林寺";
		break;
	case "sworder" :
		str="仙剑派";
		break;
	}
	files = get_dir(get_clan_dir(me) + "npc/"+type+level+"-" + "*.c");
	i = sizeof(files);
	if(i==0) {
		list = sprintf("帮内目前没有%s%s级之帮众。\n",str,CHINESE_D->chinese_number(level));
		write(list);
		return 1;
	}
	list = sprintf("帮内目前有%s位%s%s级之帮众：\n",CHINESE_D->chinese_number(i),str,CHINESE_D->chinese_number(level));
	write(list);
	for(k=1; k<i+1; k++) {
		number=sprintf("%d",k);
		temp = get_clan_dir(me)+"npc/"+type+level+"-"+number+".c";
		if (file_size(temp) == -1)
			str="已放逐之帮众";
		else {
			str=temp->query("name");
		}
		printf("[%2d]%-20s%s", k, str, (k%2 ? "" : "\n") );
	}
    write("\n");
    return 1;
}

int show_list_npc(object me)
{
        string  *files, *list, temp, dir,str2,number,temp_name;
        int     i,k;
        str2 = "npc";
        temp    = get_clan_dir(me);
        dir     = get_clan_dir(me);
        dir     += "npc/"+str2+"*.c";
        temp    += "npc/"+str2;
        files   = get_dir(dir);
        i       = sizeof(files);
        dir = "------贵帮所设计的帮众及怪物如下：------\n";
        write(dir);
        if(i==0)
        {
                dir = "贵帮没有设计帮众及怪物!!!!\n";
                write(dir);
                return 0;
        }
        for(k=0; k<i; k++)
         {
          k=k+2;
          number=sprintf("%d",k);
          temp +=number+".c";
          if (file_size(temp) == -1)  {
            temp_name="被删除之帮众";
            i++;
          }
          else
          {
          temp_name=temp->query("name");
           }
          k=k-2;
          printf("[%2d]%-20s%s", k, temp_name, (k%2 ? "" : "\n") );
          temp ="";
          temp = get_clan_dir(me)+"npc/npc";
         }
        write("\n");
        return 1;
}

// 砍掉帮派的room,npc,及weapon的副程式 by chan
// type 是指种类(room,npc,weapon)
// type 是给weapon用的(代表种类,sword,unarmed...等)
// number 代表编号(从0开始由玩家自订)
int del_list(object me, string type,string type2,string number)
{
        string  temp, dir,str,str2;
        object cancer;
        int     i,k;
        switch (type) {
        case "room" :
                       str="room"+number+".c";
                       str2="room/";
                       break;
        case "npc"  :
                       str="npc"+number+".c";
                       str2="npc/";
                       break;
        default :
                       str=type2+number+".c";
                       str2="weapon/";
                       break;
        }
        temp    = get_clan_dir(me);
        temp    += str2;
        temp    += str;
        if (file_size(temp) == -1)
         return 0;
        rm(temp);
        return 1;
}

// 检查玩家 id 是否是 clan 帮派的一员, 是就传回 1,
// 如果没 flag 或 flag = 0, 则非帮众传回 0
// 如果有 flag 或 flag != 0, 非帮众则加入该帮派的 members
// return -1 : 如果没有这个帮派的资料
int is_member_or_add(string clan, string id, int flag)
{
        string *member_list;
        
        if( undefinedp(clans[clan]) )
                return -1;
        if( clans[clan]["master"] == id )
                return CLAN_MASTER;
        if( member_array( id, clans[clan]["level2"] ) != -1 )
                return CLAN_LEVEL2;
        if( member_array( id, clans[clan]["level3"] ) != -1 )
                return CLAN_LEVEL3;
        if( member_array( id, clans[clan]["level4"] ) != -1 )
                return CLAN_LEVEL4;
        if( member_array( id, clans[clan]["members"] ) != -1 )
                return CLAN_MEMBERS;
        if( !flag )
                return 0;

        if( undefinedp(clans[clan]["members"]) )
                clans[clan]["members"] = ({ id });
        else
                clans[clan]["members"] += ({ id });
        return 1;
}