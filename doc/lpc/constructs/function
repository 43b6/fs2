* LPC 函数(或者称为 "方法")

The LPC function is similar but not identical to that provided by C
(it is most similar to that provided by ANSI C).  The syntax is as follows:
    LPC 的函数很类似 C, 但是又不完全一样(最像的是 ANSI C).
  一般的语法如下:

传回的资料型态  函数名称(资料型态 参数-1, 资料型态 参数-2, ...)
{
	// 变数宣告在前头, 这是一般的方式.
	资料型态 变数-1;
	资料型态 变数-2;
	...;

	叙述;
	...;

	return 函数的传回值;	// 请配合前面宣告时的资料型态
}

    虽然注解里有说了, 但是在此再次强调, 传回值要跟前面的宣告
  的资料型态一致. 假如你用 void 来宣告函数的传回型态, 那就是
  代表不必传回值, 可以直接用 return; 这样结束函数. 例:

	void 函数名称(资料型态 参数, ...)
	{
	  叙述;
	  ...;
	}

    呼叫函数的方法要配合函数的宣告, 如下面的样子:
	函数名称(参数-1, 参数-2, ...);

    此外, 可以呼叫别的物件中的函数, 方法如下:
	物件->函数名称(参数-1, 参数-2, ...);

    或:
	call_other(物件, 函数名称, 参数-1, 参数-2, ...);

    最后, 最新版的 MudOS 有支援函数型态的变数, 请见变数型态的说明.
