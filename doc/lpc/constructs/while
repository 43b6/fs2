LPC while 回圈:

    LPC 的 while 回圈跟一般的 C 一模一样, 语法如下:

	while (表示式)
	  叙述;	

    或

	while (表示式) {
	  叙述;
	  叙述;
	  .
	  .
	}

    在 while 回圈内的叙述会在表示式的值不为 0 的情况下执行, 也就是
  该表示式为"真". 如果 while 的叙述有 break 叙述, 则会无条件跳出回
  圈, 如果碰到 continue 叙述, 则会跳过该次回圈, 继续下一次的回圈,
  这种用法就像在 for 回圈里说的一样.
    值得注意的是, while 比 for 回圈更容易造成无穷回圈, 如果这样的
  话, 会造成系统莫大的负担, 甚至是当机.

    底下看一个实际的例子.

	int test(int limit)
	{
	  int total = 0;
	  int j = 0;

	  while (j < limit) {
		if ((j % 2) != 0)
			continue;
		total += j;
		j++;
	  }
	  return total;
	}

    上面的结果会跳过奇数(在 if ((j % 2) != 0) continue; 这儿跳过),
  而把 0 到 limit-1 之间所有的偶数加起来并传回去.
    底下的 for 回圈可以做到相同的功能

	int test(int limit)
	{
	  int total, j;
	  
	  for (j=total=0; j<limit; j = j+2)
		total += j;
	  return total;
	}

  或
	int test(int limit)
	{
	  int total=0, j=0;
	  
	  for (; j<limit; j = j+2)
		total += j;
	  return total;
	}
